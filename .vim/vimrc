set nocompatible
filetype off

let isWindows = has('win32')

if isWindows
    let plugPath = '$HOME/vimfiles/bundle'
else
    let plugPath = '~/.vim/bundle'
endif

" https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
call plug#begin(plugPath)
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-fugitive'
Plug 'vim-syntastic/syntastic'
Plug 'mhartington/oceanic-next'
Plug 'kien/ctrlp.vim'
Plug 'fatih/vim-go'
Plug 'dracula/vim',{'as':'dracula'}
call plug#end()
" vim-plug commands:
" PlugInstall   install plugins
" PlugUpdate    install/update plugins
" PlugClean     remove unused plugin directories
" PlugUpgrade   update vim-plug
" PlugStatus    check status of plugins

filetype plugin indent on

" airline
set laststatus=2    " show statusline
let g:airline_theme='dracula'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline#extensions#syntastic#enabled = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SynstasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 2
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_loc_list_height = 5
let g:syntastic_go_checkers = ['golint']

" NERDTree
let NERDTreeShowHidden=1
map <C-n> :NERDTreeToggle<CR>

let g:netrw_browse_split = 3
set encoding=utf-8
set noerrorbells
set lazyredraw
set scrolloff=999
set number
syntax enable
set showmatch
set tabstop=4
set shiftwidth=4
set expandtab
set backspace=indent,eol,start
set list
set listchars=tab:\|┄,trail:♡,eol:¬
set ttyfast

" easier splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
set splitbelow
set splitright

let mapleader = '\'
inoremap jk <Esc>
noremap j gj
noremap k gk
" close a buffer without closing viewport
map <leader>q :bp<bar>sp<bar>bn<bar>bd<CR>

" no swap and backup files
set nobackup
set noswapfile
set viminfo=

highlight ColorColumn ctermfg=white ctermbg=093 guifg=white guibg=magenta
call matchadd('ColorColumn', '\%81v', 100) " highlight 81st column

if isWindows
    colorscheme slate
else
    set term=xterm
    set t_Co=256
    colorscheme dracula
endif
